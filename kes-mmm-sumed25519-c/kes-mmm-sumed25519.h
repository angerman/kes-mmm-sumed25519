/**
 * Key Evolving Signature (KES) using MMM Sum scheme with ED25519 signatures
 *
 * Copyright 2020, Input Output HK Ltd
 * Licensed with: MIT OR Apache-2.0
 */

#ifndef KES_SUMED25519_LIBC_
#define KES_SUMED25519_LIBC_

/* Generated with cbindgen:0.14.2 */

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>

#define KES_MMM_SUMED25519_PUBLIC_KEY_SIZE 32

#define KES_MMM_SUMED25519_SECRET_KEY_SIZE 1220

#define KES_MMM_SUMED25519_SIGNATURE_SIZE 484

#define KES_MMM_SUMED25519_TOTAL_UPDATE 4096

#define KES_MMM_SUMED25519_TOTAL_UPDATE_LOG 12

extern const str *KES_MMM_SUMED25519_VERSION;

bool kes_mmm_sumed25519_publickey_verify(const uint8_t *public_ptr,
                                         const uint8_t *message_ptr,
                                         uintptr_t message_size,
                                         const uint8_t *signature_ptr);

void kes_mmm_sumed25519_secretkey_compute_public(const uint8_t *secret_ptr,
                                                 uint8_t *public_ptr);

void kes_mmm_sumed25519_secretkey_generate(const uint8_t *seed,
                                           uint8_t *secret_ptr,
                                           uint8_t *public_ptr);

void kes_mmm_sumed25519_secretkey_sign(const uint8_t *secret_ptr,
                                       const uint8_t *message_ptr,
                                       uintptr_t message_size,
                                       uint8_t *signature_ptr);

uint32_t kes_mmm_sumed25519_secretkey_t(const uint8_t *secret_ptr);

void kes_mmm_sumed25519_secretkey_update(uint8_t *secret_ptr);

#endif /* KES_SUMED25519_LIBC_ */
